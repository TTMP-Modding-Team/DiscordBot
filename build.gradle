buildscript {
	repositories {
		maven { url = 'https://files.minecraftforge.net/maven' }
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
		classpath "com.github.jengelman.gradle.plugins:shadow:4.0.4"
	}
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'


version = "${mod_version}"
group = "tictim.${mod_id}"
archivesBaseName = "${mod_name}-${mc_version}"

compileJava.options.encoding = 'UTF-8'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
	mappings channel: 'snapshot', version: "${mappings_version}"
	// makeObfSourceJar = false

	// accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
	runs {
		client {
			workingDirectory project.file('run')

			property 'forge.logging.console.level', 'debug'

			ideaModule "${project.name}.main"

			environment 'MOD_CLASSES', "${mod_id}%%${project.file("out/production/resources").canonicalPath};${mod_id}%%${project.file("out/production/classes").canonicalPath}"

			mods {
				ttmpdiscordbot {
					source sourceSets.main
				}
			}
		}

		server {
			workingDirectory project.file('run')

			property 'forge.logging.console.level', 'debug'

			ideaModule "${project.name}.main"

			environment 'MOD_CLASSES', "${mod_id}%%${project.file("out/production/resources").canonicalPath};${mod_id}%%${project.file("out/production/classes").canonicalPath}"

			mods {
				ttmpdiscordbot {
					source sourceSets.main
				}
			}
		}

		data {
			workingDirectory project.file('run')

			property 'forge.logging.console.level', 'debug'

			args '--mod', mod_id, '--all', '--output', file('src/generated/resources/')

			ideaModule "${project.name}.main"

			environment 'MOD_CLASSES', "${mod_id}%%${project.file("out/production/resources").canonicalPath};${mod_id}%%${project.file("out/production/classes").canonicalPath}"

			mods {
				ttmpdiscordbot {
					source sourceSets.main
				}
			}
		}
	}
}

repositories {
	jcenter()
	google()
}

configurations{
	shade
	implementation.extendsFrom shade
}

dependencies {
	minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

	shade 'net.dv8tion:JDA:4.0.0_73'
	shade 'com.vdurmont:emoji-java:5.1.1'
}

jar {
	/*configurations.shade.each { dep ->
		project.fileTree(dep)
		from(project.zipTree(dep)){
			exclude 'META-INF', 'META-INF/**'
		}
	}*/
	manifest {
		attributes([
				"Specification-Title"     : project.name,
				"Specification-Vendor"    : "Tictim",
				"Specification-Version"   : "${version}",
				"Implementation-Title"    : "tictim.${mod_id}",
				"Implementation-Vendor"   : "Tictim",
				"Implementation-Version"  : "${version}",
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}

shadowJar{
	classifier = ""

	configurations = [project.configurations.shade]
	relocate 'net/dv8tion/jda', 'tictim/ttmpdiscordbot/repackaged/net/dv8tion/jda'
	relocate 'com/vdurmont/emoji', 'tictim/ttmpdiscordbot/repackaged/com/vdurmont/emoji'
	relocate 'tomp2p/opuswrapper', 'tictim/ttmpdiscordbot/repackaged/tomp2p/opuswrapper'
	relocate 'club/minnced/opus/util', 'tictim/ttmpdiscordbot/repackaged/club/minnced/opus/util'
	relocate 'com/fasterxml', 'tictim/ttmpdiscordbot/repackaged/com/fasterxml'
	relocate 'com/iwebpp', 'tictim/ttmpdiscordbot/repackaged/com/iwebpp'
	relocate 'com/neovisionaries', 'tictim/ttmpdiscordbot/repackaged/com/neovisionaries'
	relocate 'com/sun/jna', 'tictim/ttmpdiscordbot/repackaged/com/sun/jna'
	relocate 'gnu/trove', 'tictim/ttmpdiscordbot/repackaged/gnu/trove'
	relocate 'javax/annotation', 'tictim/ttmpdiscordbot/repackaged/javax/annotation'
	relocate 'okhttp3', 'tictim/ttmpdiscordbot/repackaged/okhttp3'
	relocate 'okio', 'tictim/ttmpdiscordbot/repackaged/okio'
	relocate 'org/slf4j', 'tictim/ttmpdiscordbot/repackaged/org/slf4j'
	relocate 'org/json', 'tictim/ttmpdiscordbot/repackaged/org/json'
	relocate 'org/jetbrains/annotations', 'tictim/ttmpdiscordbot/repackaged/org/jetbrains/annotations'
	relocate 'org/intellij/lang/annotations', 'tictim/ttmpdiscordbot/repackaged/org/intellij/lang/annotations'
	relocate 'org/apache/commons/collections4', 'tictim/ttmpdiscordbot/repackaged/org/apache/commons/collections4'
}

reobf {
	shadowJar {}
}

tasks.build.dependsOn shadowJar

artifacts {
	archives shadowJar
}